---
/**
 * You are an AI that generates website pages from prompts. You will listen to the user prompt and will only output JSON with the keys "html", "css", and "javascript". The pages you generate will have a lots content per page with animations and interactive elements. You will fully complete all the code you write and add lots of detail to each page.
 */
import '@fontsource/inter';
import '@fontsource-variable/inter-tight';
import { Form } from '../components/Form';
import { Ticker } from '../components/Ticker';
import { ViewTransitions } from 'astro:transitions';
import dedent from 'dedent';

const db = Astro.locals.runtime.env.DB;
const siteKey = Astro.locals.runtime.env.PUBLIC_TURNSTILE_SITE_KEY;

await db
  .prepare('UPDATE page SET views = views + 1 WHERE path = ? RETURNING views')
  .bind('/')
  .run();

const { views } = await db
  .prepare('SELECT SUM(views) as views FROM page')
  .first();

const { results: mostLikedPosts } = await db
  .prepare(
    dedent`SELECT p.id, p.title, p.path, COUNT(ul.id) AS like_count
           FROM page p
           LEFT JOIN user_like ul ON p.id = ul.page_id
           GROUP BY p.id
           ORDER BY like_count DESC
           LIMIT 5;`
  )
  .all();

const { results: mostViewedPosts } = await db
  .prepare(
    'SELECT id,title,path,views FROM page WHERE path != "/" ORDER BY views DESC LIMIT 6'
  )
  .all();

const { results: recentPosts } = await db
  .prepare('SELECT id,title,path FROM page ORDER BY created_at DESC LIMIT 25')
  .all();

// const {} = await db.prepare('SELECT id,title,');

const formattedViews = views.toLocaleString();
---

<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <meta name='color-scheme' content='light' />
    <title>Robots Blogging</title>
    <ViewTransitions />
  </head>
  <body class='font-sans bg-gray-50 mx-7 flex flex-col gap-11 my-6'>
    <div class='flex justify-between text-gray-800'>
      <div class='flex gap-3'>
        <a href='/'>home</a>
        <a href='/'>posts</a>
      </div>
      <p class='text-gray-600 hidden sm:block'>
        an experiment by <a
          href='https://nbaron.com/'
          target='_blank'
          rel='noreferrer'
          class='underline'>nbaron</a
        >
      </p>
      <p class='text-gray-600 sm:hidden'>
        by <a
          href='https://nbaron.com/'
          target='_blank'
          rel='noreferrer'
          class='underline'>nbaron</a
        >
      </p>
    </div>
    <div class='flex flex-col gap-8 sm:gap-12 overflow-clip'>
      <div class='flex flex-col max-w-screen-sm self-center'>
        <div class='flex flex-col gap-6'>
          <div
            class='bg-gray-50 shadow-sm self-start border sm:self-center border-gray-200 w-fit rounded-full flex px-7 py-3 items-center gap-3'
          >
            <div
              class='w-3 h-3 shrink-0 animate-pulse rounded-full bg-[#4ADE80]'
            >
            </div>
            <p class='font-normal text-gray-600'>
              This website has had {formattedViews} page views
            </p>
          </div>
          <div class='flex flex-col gap-7'>
            <div class='flex flex-col gap-4'>
              <h1
                class='text-gray-900 font-title leading-[125%] text-5xl text-left sm:text-center'
              >
                This blog is entirely generated by AI prompts
              </h1>
              <p
                class='text-gray-700 font-light text-left sm:text-center text-lg'
              >
                What happens when AI creates higher quality content than humans?
              </p>
            </div>
            <Form client:load siteKey={siteKey} />
          </div>
        </div>
      </div>
      <div class='flex flex-col gap-2 relative'>
        <div
          class='pointer-events-none absolute z-10 left-0 top-0 bottom-0 right-0'
          style={{
            background:
              'linear-gradient(90deg, #FAFAF9 0%, rgba(255, 255, 255, 0.00) 10%, rgba(255, 255, 255, 0.00) 90%, #FAFAF9 100%)',
          }}
        >
        </div>
        <Ticker posts={recentPosts} client:load />
        <Ticker posts={recentPosts} client:load reverse />
      </div>
      <div class='flex flex-col gap-12'>
        <div class='flex flex-col gap-4 w-full max-w-screen-lg mx-auto'>
          <div class='flex flex-col gap-1'>
            <h3 class='text-gray-800 text-2xl font-title'>
              Top rated blog posts
            </h3>
            <p class='text-gray-700 font-light'>Read the fan favourites</p>
          </div>
          <div class='grid grid-cols-1 gap-2 sm:grid-cols-2'>
            {
              mostLikedPosts.map(
                (post: {
                  id: number;
                  title: string;
                  path: string;
                  like_count: number;
                }) => (
                  <a
                    href={post.path}
                    class='justify-between flex gap-2 p-5 items-center rounded-2xl bg-gray-50 border border-gray-200'
                  >
                    <p class='text-gray-700 line-clamp-2 font-light'>
                      {post.title}
                    </p>
                    <p class='text-gray-500 font-light text-nowrap'>
                      {post.like_count} likes
                    </p>
                  </a>
                )
              )
            }
          </div>
        </div>
        <div class='flex flex-col gap-4 w-full max-w-screen-lg mx-auto'>
          <div class='flex flex-col gap-1'>
            <h3 class='text-gray-800 text-2xl font-title'>
              Most viewed blog posts
            </h3>
            <p class='text-gray-700 font-light'>Read the fan favourites</p>
          </div>
          <div class='grid grid-cols-1 gap-2 sm:grid-cols-2'>
            {
              mostViewedPosts.map(
                (post: {
                  id: number;
                  title: string;
                  path: string;
                  views: number;
                }) => (
                  <a
                    href='/'
                    class='justify-between flex gap-2 p-5 items-center rounded-2xl bg-gray-50 border border-gray-200'
                  >
                    <p class='text-gray-700 line-clamp-2 font-light'>
                      {post.title}
                    </p>
                    <p class='text-gray-500 font-light text-nowrap'>
                      {post.views} views
                    </p>
                  </a>
                )
              )
            }
          </div>
        </div>
      </div>
    </div>
    <p class='text-sm text-gray-400'>built by robots for humans</p>
  </body>
</html>

<script>
  import { gsap } from 'gsap';

  const items = Array.from(
    document.querySelectorAll(
      'h1, h2, h3, h4, h5, h6, p:not(.carousel-item), li, pre, code, input, label, .fade-in'
    )
  ).splice(0, 20);

  gsap.from(items, {
    duration: 0.5,
    y: -50,
    opacity: 0,
    stagger: 0.05,
    ease: 'power3.out',
  });
</script>
